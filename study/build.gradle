apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    // 默认配置，buildTypes和ProductFlavors都没有的配置默认使用
    // 其可用属性是buildTypes和ProductFlavors之和
    defaultConfig {
        applicationId "com.garfield.study"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]   //设置给编译处理器的参数
            }
        }
    }
    signingConfigs {
        release {
            storeFile file("../MyAndroid.jks")
            storePassword "android"
            keyAlias "weishu"
            keyPassword "android"
        }
    }
    //构建版本（对内）
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false  //是否混淆
            zipAlignEnabled true  //ZIP对齐优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationIdSuffix ".debug"    //只能加后缀
            versionNameSuffix ".debug"      //只能加后缀
            buildConfigField "boolean", "IS_DEBUG", "true"
            resValue "string", "app_name", "Study_Debug"
        }
//        preview.initWith(buildTypes.debug)
//        preview {
//            applicationIdSuffix ".preview"
//            resValue "string", "app_name", "Study_Preview"
//        }
    }
    // 生产版本（对外）
    // 用来推出不同的版本，最终打出的APK的数量是buildTypes乘以productFlavors
    // 同defaultConfig参数一样
    // flavorDimensions("color", "channel")  //多维度构建，两两组合
    productFlavors {
        baidu {
            //println("baidu productFlavors")
            applicationId "com.garfield.study.baidu"   //可以同时在手机上安装
            //dimension "channel"
        }
        xiaomi {
            //println("xiaomi productFlavors")
            applicationIdSuffix ".xiaomi"
            //dimension "channel"
        }
//        red {
//            dimension "color"
//        }
//        blue {
//            dimension "color"
//        }
    }
//    // 修改对应目录
//    sourceSets {
//        main {}
//        xiaomi {
//            assets.srcDirs = ['src/xiaomi/assets']   //其实默认就是这个
//        }
//        baidu {}
//    }
//    lintOptions {
//        abortOnError false   //是否在lint发生错误时终止构建
//        ignoreWarnings true   //忽略警告，检查错误
//    }
//    dexOptions {
//        preDexLibraries false
//        javaMaxHeapSize '2048m'
//    }
//    compileOptions {
//        sourceCompatibility '1.7'
//        targetCompatibility '1.7'
//    }
    greendao {
        targetGenDir 'src/main/java'
        daoPackage 'com.garfield.study.greendao.gen'
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith(".apk")) {
                def fileName;
                if (variant.buildType.name == "release") {
                    fileName = "study_${variant.productFlavors[0].name}_release"+ ".apk"
                } else {
                    fileName = "study_${variant.productFlavors[0].name}_debug" + ".apk"
                }
                output.outputFile = new File(outputFile.parent, fileName);
            }
        }
    }

//    android.variantFilter { variant ->
//        if(variant.buildType.name.equals('preview')) {
//            variant.getFlavors().each() { flavor ->
//                if (flavor.name.equals('red') || flavor.name.equals('blue')) {
//                    variant.setIgnore(true);
//                }
//            }
//        }
//    }

}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("assembleRelease")) {
        println(theTask.name)
        //theTask.dependsOn "getReleasePassword"
    }
}

dependencies {
    //组名:库名称:版本号
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.nineoldandroids:library:2.4.0'
    compile project(':baselib')

    compile 'org.greenrobot:greendao:3.2.2'
    compile project(':apt-annotation')
    annotationProcessor project(':apt-compiler')
}
