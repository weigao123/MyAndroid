apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    // 默认配置，buildTypes和ProductFlavors都没有的配置默认使用
    // 其可用属性是buildTypes和ProductFlavors之和
    defaultConfig {
        applicationId "com.garfield.study"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]   //设置给编译处理器的参数
            }
        }
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file("../MyAndroid.jks")
            storePassword "android"
            keyAlias "weishu"
            keyPassword "android"
        }
    }
    //构建版本（对内）
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false   //是否混淆
            zipAlignEnabled true  //ZIP对齐优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationIdSuffix ".debug"    //只能加后缀
            versionNameSuffix ".debug"      //只能加后缀
            buildConfigField "boolean", "IS_DEBUG", "true"
            //resValue "string", "app_name", "Study_Debug"
        }
//        preview.initWith(buildTypes.debug)
//        preview {
//            applicationIdSuffix ".preview"
//            resValue "string", "app_name", "Study_Preview"
//        }
    }

    // 表示不同的类型
    // money表示付费类型，channel表示渠道类型，最终打出apk个数等于所有的付费类型数*所有的渠道类型数*2(debug/release)
    // flavorDimensions("money", "channel")  //要求productFlavors的每一个都属于flavorDimensions中的一类
    productFlavors {
//        baidu {
//            //println("baidu productFlavors")
//            applicationId "com.garfield.study"   //重定义
//            //dimension "channel"
//        }
//        xiaomi {
//            //println("xiaomi productFlavors")
//            applicationIdSuffix ".xiaomi"        //可以同时在手机上安装
//            //dimension "channel"
//        }
//        pay {
//            dimension "money"
//        }
//        free {
//            dimension "money"
//        }
    }
//    // 修改对应目录
//    sourceSets {
//        main {}
//        xiaomi {
//            assets.srcDirs = ['src/xiaomi/assets']   //其实默认就是这个
//        }
//        baidu {}
//    }
//    lintOptions {
//        abortOnError false   //是否在lint发生错误时终止构建
//        ignoreWarnings true   //忽略警告，检查错误
//    }
    dexOptions {
        preDexLibraries false
        //javaMaxHeapSize '2g'
        additionalParameters = ['--multi-dex',
                                //'--main-dex-list=' + project.rootDir.absolutePath + '/app/maindexlist.txt',   //指明想哪些类打包到主dex
                                //'--minimal-main-dex',   //最小化主dex，保证主dex中只有上面参数指定的类
                                //'--set-max-idx-number=30000'    //每个dex中最多的方法数
        ]
    }
//    compileOptions {
//        sourceCompatibility '1.7'
//        targetCompatibility '1.7'
//    }
    greendao {
        targetGenDir 'src/main/java'
        daoPackage 'com.garfield.study.greendao.gen'
    }
//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith(".apk")) {
//                def fileName;
//                if (variant.buildType.name == "release") {
//                    fileName = "study_${variant.productFlavors[0].name}_release"+ ".apk"
//                } else {
//                    fileName = "study_${variant.productFlavors[0].name}_debug" + ".apk"
//                }
//                output.outputFile = new File(outputFile.parent, fileName);
//            }
//        }
//    }

//    android.variantFilter { variant ->
//        if(variant.buildType.name.equals('preview')) {
//            variant.getFlavors().each() { flavor ->
//                if (flavor.name.equals('red') || flavor.name.equals('blue')) {
//                    variant.setIgnore(true);
//                }
//            }
//        }
//    }

}


dependencies {
    //组名:库名称:版本号
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation project(':baselib')

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    implementation 'com.jakewharton:butterknife:8.4.0'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation project(':apt-annotation')
    annotationProcessor project(':apt-compiler')
}


println "-----Study configure-----"