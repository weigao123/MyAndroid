apply plugin: 'com.android.application'

android {
    useLibrary 'org.apache.http.legacy'    //使用可选lib，23以后变为可选

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.garfield.weishu"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 8
        versionName "1.0"
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }
    signingConfigs {
        release {
            storeFile file("../MyAndroid.jks")
            storePassword "android"
            keyAlias "weishu"
            keyPassword "android"
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

// 都可以放到每一个依赖里
configurations.all {
    //transitive = false    //是否自动处理子依赖项，默认true
    exclude group: 'com.android.support', module: 'support-v13'   //排除某个组
    exclude module: 'support-v13'     //排除某个module
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation project(':baselib')
    //implementation(name:'baselib-debug', ext:'aar')
    //implementation 'com.garfield:baselib:1.0-SNAPSHOT'
    implementation 'com.afollestad.material-dialogs:core:0.9.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.netease.nimlib:basesdk:3.4.0'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
}

def VERSION_ANDROID_SUPPORT_MAXIMUM = "26.0.1"
configurations.all {    //必须放到module的project中，因为root的project没有依赖
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    try {
                        //println "support: " + requested.group + "  " + requested.version
                        List versionArr = requested.version.replace('+', '').split('\\.')
                        List limit = VERSION_ANDROID_SUPPORT_MAXIMUM.split('\\.')
                        for (int i = 0; i < 3; i++) {    //一般最多3位
                            int v = Integer.valueOf(versionArr[i] == null ? '0' : versionArr[i])
                            int l = Integer.valueOf(limit[i] == null ? '0' : limit[i])
                            if (v != l) {
                                if (v > l) {
                                    //println "support lib is too new"
                                    //throw new StopActionException("support lib is too new")
                                }
                                break
                            }
                        }
                    } catch (NumberFormatException e) {
                        println e
                    }
                    //details.useVersion '25.3.1'
                }
            }
        }
    }
}

println "-----Weishu configure-----"